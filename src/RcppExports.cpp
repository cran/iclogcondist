// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_constraint
NumericVector compute_constraint(const NumericVector& delta_tau, const NumericVector& phi);
RcppExport SEXP _iclogcondist_compute_constraint(SEXP delta_tauSEXP, SEXP phiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type delta_tau(delta_tauSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type phi(phiSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_constraint(delta_tau, phi));
    return rcpp_result_gen;
END_RCPP
}
// find_re_phi_cpp
NumericVector find_re_phi_cpp(NumericVector tilde_phi, IntegerVector is, NumericMatrix qsi);
RcppExport SEXP _iclogcondist_find_re_phi_cpp(SEXP tilde_phiSEXP, SEXP isSEXP, SEXP qsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tilde_phi(tilde_phiSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type is(isSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type qsi(qsiSEXP);
    rcpp_result_gen = Rcpp::wrap(find_re_phi_cpp(tilde_phi, is, qsi));
    return rcpp_result_gen;
END_RCPP
}
// compute_first_second_diag_order_phi
Rcpp::List compute_first_second_diag_order_phi(Rcpp::NumericVector weight, Rcpp::NumericVector phi, Rcpp::IntegerVector li, Rcpp::IntegerVector ri, Rcpp::IntegerVector L_Rc, Rcpp::IntegerVector Lc_R, Rcpp::IntegerVector Lc_Rc);
RcppExport SEXP _iclogcondist_compute_first_second_diag_order_phi(SEXP weightSEXP, SEXP phiSEXP, SEXP liSEXP, SEXP riSEXP, SEXP L_RcSEXP, SEXP Lc_RSEXP, SEXP Lc_RcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type li(liSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type ri(riSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type L_Rc(L_RcSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type Lc_R(Lc_RSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type Lc_Rc(Lc_RcSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_first_second_diag_order_phi(weight, phi, li, ri, L_Rc, Lc_R, Lc_Rc));
    return rcpp_result_gen;
END_RCPP
}
// compute_1st_2nd_order_tilde_cpp
List compute_1st_2nd_order_tilde_cpp(NumericVector first_order, NumericVector second_order, IntegerVector is, NumericMatrix qsi);
RcppExport SEXP _iclogcondist_compute_1st_2nd_order_tilde_cpp(SEXP first_orderSEXP, SEXP second_orderSEXP, SEXP isSEXP, SEXP qsiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type first_order(first_orderSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type second_order(second_orderSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type is(isSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type qsi(qsiSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_1st_2nd_order_tilde_cpp(first_order, second_order, is, qsi));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_iclogcondist_compute_constraint", (DL_FUNC) &_iclogcondist_compute_constraint, 2},
    {"_iclogcondist_find_re_phi_cpp", (DL_FUNC) &_iclogcondist_find_re_phi_cpp, 3},
    {"_iclogcondist_compute_first_second_diag_order_phi", (DL_FUNC) &_iclogcondist_compute_first_second_diag_order_phi, 7},
    {"_iclogcondist_compute_1st_2nd_order_tilde_cpp", (DL_FUNC) &_iclogcondist_compute_1st_2nd_order_tilde_cpp, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_iclogcondist(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
